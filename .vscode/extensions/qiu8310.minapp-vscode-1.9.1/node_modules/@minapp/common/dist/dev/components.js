"use strict";
/******************************************************************
MIT License http://www.opensource.org/licenses/mit-license.php
Author Mora <qiuzhongleiabc@126.com> (https://github.com/qiu8310)
*******************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.components = require('../../res/components.json');
function getComponentMarkdown(c) {
    var rows = c.desc ? c.desc.slice() : [c.name];
    if (c.since)
        rows.push(since(c.since));
    if (c.authorize)
        rows.push(field('需要授权', link(c.authorize.name, c.authorize.link)));
    rows.push.apply(rows, list('Bug', c.bugs));
    rows.push.apply(rows, list('Tip', c.tips));
    rows.push.apply(rows, list('Note', c.notices));
    if (c.relateApis)
        rows.push.apply(rows, list('相关接口', c.relateApis.map(function (l) { return link(l.name, l.link); })));
    if (c.docLink)
        rows.push(link('官方文档', c.docLink));
    return rows.join('\n\n');
}
exports.getComponentMarkdown = getComponentMarkdown;
function getComponentAttrMarkdown(a) {
    var rows = a.desc ? a.desc.slice() : [a.name];
    if (a.type)
        rows.push(field('类型', a.type.name));
    if (a.since)
        rows.push(since(a.since));
    if (a.enum)
        rows.push.apply(rows, list('可选值', a.enum.map(_formatAttrValue)));
    if (a.subAttrs && !a.enum)
        rows.push.apply(rows, list('可选值', a.subAttrs.map(function (s) { return _formatAttrValue({ value: s.equal }); })));
    if (a.extras)
        rows.push.apply(rows, a.extras.filter(function (e) { return e.key && e.value; }).map(function (e) { return field(e.key, e.value); }));
    return rows.join('\n\n');
}
exports.getComponentAttrMarkdown = getComponentAttrMarkdown;
function getComponentAttrValueMarkdown(v) {
    var rows = [v.desc || v.value];
    if (v.since)
        rows.push(since(v.since));
    return rows.join('\n\n');
}
exports.getComponentAttrValueMarkdown = getComponentAttrValueMarkdown;
function list(title, items) {
    if (!items || !items.length)
        return [];
    if (items.length === 1)
        return [field(title, items[0])];
    return [field(title, items.map(function (it) { return "\n* " + it; }).join(''))];
}
function since(val) {
    return field('Since', link(val, 'https://mp.weixin.qq.com/debug/wxadoc/dev/framework/compatibility.html'));
}
function link(name, url) {
    return "[" + name + "](" + url + ")";
}
function field(title, value) {
    return "**" + title + ":** " + value;
}
function _formatAttrValue(av) {
    var rows = [av.value];
    if (av.desc)
        rows.push("**" + av.desc + "**");
    if (av.since)
        rows.push(since(av.since));
    if (rows.length > 1)
        rows[0] += ':';
    return rows.join(' ');
}
