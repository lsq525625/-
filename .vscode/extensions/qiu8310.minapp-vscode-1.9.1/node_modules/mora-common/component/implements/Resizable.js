"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var ReactDOM = require("react-dom");
var applyMixins_1 = require("../../util/applyMixins");
var onview_1 = require("../../dom/onview");
var array_1 = require("../../util/array");
var Resizable = /** @class */ (function (_super) {
    tslib_1.__extends(Resizable, _super);
    function Resizable() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Resizable.apply = function (_a) {
        var _b = _a === void 0 ? {} : _a, _c = _b.direction, direction = _c === void 0 ? 'width' : _c, _d = _b.throttle, throttle = _d === void 0 ? 200 : _d, _e = _b.debounce, debounce = _e === void 0 ? 0 : _e;
        var directions = array_1.toArray(direction);
        var base = {
            getInsideContainer: function () {
                return ReactDOM.findDOMNode(this);
            },
            componentDidMount: function () {
                var _this = this;
                this.__resizableOff = onview_1.onview(function () {
                    var el = _this.getInsideContainer();
                    var rect = el.getBoundingClientRect();
                    var lastRect = _this.__resizableRect;
                    _this.__resizableRect = rect;
                    if (!lastRect
                        || directions.indexOf('width') >= 0 && rect.width !== lastRect.width
                        || directions.indexOf('height') >= 0 && rect.height !== lastRect.height) {
                        _this.onResize(rect, lastRect);
                    }
                }, { events: ['resize', 'orientationchange', 'load', 'pageshow'], throttle: throttle, debounce: debounce });
            },
            componentWillUnmount: function () {
                this.__resizableOff();
            }
        };
        return function (Ctor) { return applyMixins_1.applyMixins(Ctor, [Resizable, base], { merges: ['componentDidMount', 'componentWillUnmount'] }); };
    };
    return Resizable;
}(React.PureComponent));
exports.Resizable = Resizable;
