"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var formatElapsedSeconds_1 = require("./formatElapsedSeconds");
var formatDate_1 = require("./formatDate");
var BYTE_UNITS = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
function prettyBytes(num, base) {
    if (base === void 0) { base = 1024; }
    if (!isFinite(num))
        throw new TypeError("Expected a finite number, got " + typeof num + ": " + num);
    var neg = num < 0;
    if (neg)
        num = -num;
    if (num < 1)
        return (neg ? '-' : '') + num + ' B';
    var exponent = 0;
    var testNum = num;
    var found = BYTE_UNITS.some(function (unit, index) {
        testNum /= index ? base : 1;
        if (testNum < 1) {
            exponent = index - 1;
            return true;
        }
        return false;
    });
    if (!found)
        exponent = BYTE_UNITS.length - 1;
    // const exponent = Math.min(Math.floor(Math.log10(num) / 3), BYTE_UNITS.length - 1)
    var numStr = removeFloatStringExtraZero((num / Math.pow(base, exponent)).toPrecision(3));
    return (neg ? '-' : '') + numStr + ' ' + BYTE_UNITS[exponent];
}
exports.prettyBytes = prettyBytes;
function prettyCount(num) {
    var suffix = '';
    var prefix;
    if (num < 1000) {
        return num + '';
    }
    else if (num <= 10000) {
        prefix = (num / 1000).toPrecision(1);
        suffix = 'k';
    }
    else if (num <= 1000000) {
        prefix = (num / 10000).toPrecision(1);
        suffix = 'w';
    }
    else {
        return '100w+';
    }
    return removeFloatStringExtraZero(prefix) + suffix;
}
exports.prettyCount = prettyCount;
function prettyDatetime(ms, diff, format) {
    if (format === void 0) { format = 'yyyy-mm-dd'; }
    if (diff < 1)
        return '刚刚';
    if (diff < 60)
        return diff + ' 秒前';
    var obj = formatElapsedSeconds_1.formatElapsedSeconds(diff, { maxLevel: 'day' });
    if (diff < 3600)
        return obj.minute + ' 分前';
    if (diff < 86400)
        return obj.hour + ' 小时前';
    if (diff < 2592000)
        return obj.day + ' 天前';
    return formatDate_1.formatDate(new Date(ms), format);
}
exports.prettyDatetime = prettyDatetime;
function removeFloatStringExtraZero(str) {
    // if (str.indexOf('.') < 0) return str
    // return str
    //   .replace(/0+$/, '') // 去除小数后面无用的 0
    //   .replace(/\.$/, '') // 去除最后一个无用的小数点
    return Number(str);
}
