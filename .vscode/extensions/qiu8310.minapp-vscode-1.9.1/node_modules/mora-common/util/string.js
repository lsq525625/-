"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 将字符串的首字母大写
 */
function capitalize(str) {
    return str && str[0] ? str[0].toUpperCase() + str.slice(1) : '';
}
exports.capitalize = capitalize;
/**
 * Anagrams of string (with duplicates)
 *
 * Use recursion. For each letter in the given string, create all the partial
 * anagrams for the rest of its letters. Use map() to combine the letter with
 * each partial anagram, then reduce() to combine all anagrams in one array.
 * Base cases are for string length equal to 2 or 1
 *
 * @example
 *
 * anagrams('abc') -> ['abc','acb','bac','bca','cab','cba']
 */
function anagrams(str) {
    if (str.length <= 2)
        return str.length === 2 ? [str, str[1] + str[0]] : [str];
    return str.split('').reduce(function (acc, letter, i) {
        anagrams(str.slice(0, i) + str.slice(i + 1)).map(function (val) { return acc.push(letter + val); });
        return acc;
    }, []);
}
exports.anagrams = anagrams;
/** Used to match words to create compound words. */
var reWords = (function () {
    var upper = '[A-Z\\xc0-\\xd6\\xd8-\\xde]';
    var lower = '[a-z\\xdf-\\xf6\\xf8-\\xff]+';
    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');
}());
function wrap(str, fn) {
    var mat = str.match(reWords);
    return mat ? mat.reduce(fn, '') : '';
}
/**
 * "hello world" => "helloWorld"
 */
function camelCase(str) {
    return wrap(str, function (result, word, index) { return result + word.charAt(0)[index ? 'toUpperCase' : 'toLowerCase']() + word.slice(1); });
}
exports.camelCase = camelCase;
/**
 * "hello world" => "HelloWorld"
 */
function capCamelCase(str) {
    return wrap(str, function (result, word, index) { return result + word.charAt(0).toUpperCase() + word.slice(1); });
}
exports.capCamelCase = capCamelCase;
/**
 * "hello world" => "HELLO_WORLD"
 */
function upperCase(str) {
    return wrap(str, function (result, word, index) { return result + (index ? '_' : '') + word.toUpperCase(); });
}
exports.upperCase = upperCase;
/**
 * "hello world" => "hello-world"
 */
function kebabCase(str) {
    return wrap(str, function (result, word, index) { return result + (index ? '-' : '') + word.toLowerCase(); });
}
exports.kebabCase = kebabCase;
/**
 * "hello world" => "hello_world"
 */
function snakeCase(str) {
    return wrap(str, function (result, word, index) { return result + (index ? '_' : '') + word.toLowerCase(); });
}
exports.snakeCase = snakeCase;
