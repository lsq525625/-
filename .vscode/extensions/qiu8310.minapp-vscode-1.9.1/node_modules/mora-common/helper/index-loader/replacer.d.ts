export interface IReplacerModule {
    /**
     * 模块的名称，如 antd
     */
    name: string;
    /**
     * 指定模块所在的根目录
     *
     * 默认会去 node_modules/[name] 下查找
     */
    root?: string;
    /**
     * 模块的 .d.json 文件，默认会去模块目录下查找 index.d.json
     */
    djsonFile?: string;
    /**
     * 模块的 .d.ts 文件，默认会去模块目录下查找 index.d.ts 文件，或者是 package.json 中指定的 module/typings 字段所指定的文件
     *
     * 如果单独指定了此字段，需要确保 dstFile 要在模块的根目录上，如果不在，则最好也指定 root 根目录
     */
    dtsFile?: string;
    /**
     * 实时分析出 djson 文件，不缓存
     */
    realtimeParse?: boolean;
    /**
     * 开始 debug，可以输出替换前后的信息
     */
    debug?: boolean;
}
export interface IReplacerResult {
    /**
     * 替换的文件
     */
    sourceFile: string;
    /**
     * 替换前的文件内容
     */
    sourceContent: string;
    /**
     * 替换后的文件内容
     */
    replacedContent: string;
    /**
     * 此文件引用的其它模块的路径，如： ['antd/es/Layout/index']
     */
    refModules: string[];
}
export declare function replacer(sourceFile: string, modules: IReplacerModule[]): IReplacerResult;
export declare function replacer(sourceFile: string, sourceContent: string, modules: IReplacerModule[]): IReplacerResult;
