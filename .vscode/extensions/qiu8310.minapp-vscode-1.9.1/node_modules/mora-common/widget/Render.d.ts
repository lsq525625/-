/// <reference types="react" />
import * as React from 'react';
export interface IRenderProps {
    className?: string;
    container?: Element;
    children: JSX.Element;
}
export declare class Render extends React.PureComponent<IRenderProps, any> {
    private container;
    componentDidMount(): void;
    componentDidUpdate(): void;
    componentWillUnmount(): void;
    render(): null;
}
export declare function renderComponent(children: JSX.Element, container?: Element, instance?: JSX.ElementClass, callback?: () => void): void | Element | React.Component<any, any>;
export declare function removeComponent(container: Element): void;
export declare function getDefaultContainer(className?: string, parentNode?: Element): Element;
