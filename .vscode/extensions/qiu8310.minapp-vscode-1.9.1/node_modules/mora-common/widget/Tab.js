"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var classSet_1 = require("../util/classSet");
var Storable_1 = require("../component/implements/Storable");
var Panel = /** @class */ (function (_super) {
    tslib_1.__extends(Panel, _super);
    function Panel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Panel.prototype.render = function () {
        return (React.createElement("div", { className: 'wTabPanel' }, this.props.children));
    };
    return Panel;
}(React.PureComponent));
exports.Panel = Panel;
/**
 * <Tab>
 *  <Tab.Panel title='foo'>...</Tab.Panel>
 *  <Tab.Panel title='bar'>...</Tab.Panel>
 * </Tab>
 */
var Tab = /** @class */ (function (_super) {
    tslib_1.__extends(Tab, _super);
    function Tab(props, context) {
        var _this = _super.call(this, props, context) || this;
        var start = props.start;
        var currentIndex = 0;
        // 优先使用指定的
        if (start != null && typeof start === 'number' && !isNaN(start)) {
            currentIndex = start;
        }
        else {
            var stored = _this.store('index');
            if (stored != null)
                currentIndex = stored;
        }
        _this.state = { currentIndex: currentIndex };
        return _this;
    }
    Object.defineProperty(Tab.prototype, "current", {
        get: function () {
            return this.state.currentIndex;
        },
        enumerable: true,
        configurable: true
    });
    Tab.prototype.tabTo = function (index, callback) {
        var _this = this;
        var currentIndex = this.state.currentIndex;
        var onChange = this.props.onChange;
        if (index !== currentIndex) {
            this.setState({ currentIndex: index }, function () {
                _this.store('index', index);
                if (onChange)
                    onChange(index, currentIndex);
                if (callback)
                    callback(currentIndex);
            });
        }
    };
    Tab.prototype.renderPanel = function () {
        return this.props.children[this.state.currentIndex];
    };
    Tab.prototype.render = function () {
        var _this = this;
        var _a = this.props, children = _a.children, activeClass = _a.activeClass, className = _a.className, style = _a.style;
        var currentIndex = this.state.currentIndex;
        return (React.createElement("div", { className: classSet_1.classSet('wTab', className), style: style },
            React.createElement("div", { className: 'wTabNavs' }, children.map(function (p, i) {
                return (React.createElement("div", { key: i, className: classSet_1.classSet('wTabNav', (_a = {}, _a[activeClass] = i === currentIndex, _a)), onClick: function () { return _this.tabTo(i); } },
                    React.createElement("span", { className: 'wTabNavText' }, p.props.title)));
                var _a;
            })),
            React.createElement("div", { className: 'wTabPanels' }, this.renderPanel())));
    };
    Tab.Panel = Panel;
    Tab.defaultProps = {
        activeClass: 'active'
    };
    Tab = tslib_1.__decorate([
        Storable_1.Storable.apply()
    ], Tab);
    return Tab;
}(React.PureComponent));
exports.Tab = Tab;
