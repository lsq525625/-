/// <reference types="react" />
import * as React from 'react';
import { IModalDOMPropsWithoutEvents } from './ModalDOM';
export interface IModalDialogProps extends IModalDOMPropsWithoutEvents {
    /** 启用了 nowrap 之后 children 不能是字符串，需要是 JSX.Element */
    nowrap?: boolean;
    container?: Element;
    closeOnPressESC?: boolean;
    closeOnClickMask?: boolean;
    closeOnClickOutside?: boolean;
}
export interface IModalDialogResult {
    destroy: () => void;
}
export interface IModalProps extends IModalDialogProps {
    /** 如果使用了 closeOnPressESC， closeOnClickMask 或 closeOnClickOutside，就需要设置此属性 */
    closeModal?: () => void;
}
export declare class Modal extends React.PureComponent<IModalProps, any> {
    static dialog(props: IModalDialogProps, component: JSX.Element, instance?: JSX.ElementClass): IModalDialogResult;
    static render(context: React.Component<any, any>, stateKey: string, Component: React.ComponentClass<any>, props?: React.Props<Modal> & IModalDialogProps, compProps?: {}): JSX.Element | null;
    static defaultProps: {
        closeModal: () => void;
    };
    container: Element;
    renderModal(): void;
    componentDidMount(): void;
    componentDidUpdate(): void;
    componentWillUnmount(): void;
    render(): null;
}
