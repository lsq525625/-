"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var react_router_dom_1 = require("react-router-dom");
var react_router_1 = require("react-router");
var Transition_1 = require("../widget/Transition");
var style_1 = require("../dom/style");
// 不能继承 PureComponent， 否则 Route 不会更新
var TransitionRoute = /** @class */ (function (_super) {
    tslib_1.__extends(TransitionRoute, _super);
    function TransitionRoute() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*
      根据 Switch 组件改编
      本来应该这样写： <Switch location={routeProps.location} children={this.props.items.map((item, i) => <Route key={i} {...item} />)} />
    */
    TransitionRoute.prototype.getRoute = function (routeProps) {
        var items = this.props.items;
        var _a = routeProps.location, pathname = _a.pathname, search = _a.search;
        var m;
        var matchedItem;
        items.some(function (item) {
            m = react_router_1.matchPath(pathname, item);
            matchedItem = item;
            return !!m;
        });
        return m
            ? { key: m.url + search, route: React.createElement(react_router_dom_1.Route, tslib_1.__assign({}, matchedItem)), routeProps: matchedItem }
            : { key: '', route: null, routeProps: matchedItem };
    };
    TransitionRoute.prototype.render = function () {
        var _this = this;
        var _a = this.props, items = _a.items, animationName = _a.animation, animationDuration = _a.animationDuration, extra = _a.extra, props = tslib_1.__rest(_a, ["items", "animation", "animationDuration", "extra"]);
        return (React.createElement(react_router_dom_1.Route, { render: function (routeProps) {
                var _a = _this.getRoute(routeProps), key = _a.key, route = _a.route, rp = _a.routeProps;
                var extraEl;
                if (extra)
                    extraEl = extra(rp, key);
                var trans = React.createElement(Transition_1.Transition, { className: 'wTransitionRoute gInEffect', groupProps: { component: 'span' }, itemKey: key, componentProps: props, name: 'route' // 动画现在是通过注入样式来实现了，没有通过此 name
                    , leave: false, beforeEnter: function (el) { return style_1.assignStyle(el, { animationName: animationName, animationDuration: animationDuration }); }, enter: true, children: route });
                return extraEl ? React.createElement("div", null,
                    trans,
                    extraEl) : trans;
            } }));
    };
    TransitionRoute.defaultProps = {
        animation: 'fadeIn',
        animationDuration: '0.4s'
    };
    return TransitionRoute;
}(React.Component));
exports.TransitionRoute = TransitionRoute;
