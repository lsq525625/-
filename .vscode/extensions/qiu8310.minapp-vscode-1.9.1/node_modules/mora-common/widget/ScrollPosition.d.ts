/// <reference types="react" />
import * as React from 'react';
import { Scrollable } from '../component/implements/Scrollable';
import { Storable, IStorableFunc, IStorableProps } from '../component/implements/Storable';
export interface IScrollToTopProps {
    scroll?: boolean;
    container?: HTMLElement | (() => HTMLElement);
}
export interface IScrollRestoreProps extends IScrollToTopProps {
    id: string | number;
}
export declare abstract class ScrollPosition<P extends IScrollToTopProps, S> extends React.Component<P, S> {
    scrolled: boolean;
    abstract scroll(): void;
    getContainer(): any;
    componentDidMount(): void;
    componentDidUpdate(): void;
    render(): any;
}
export declare class ScrollRestore extends ScrollPosition<IScrollRestoreProps & IStorableProps, any> implements Scrollable, Storable {
    static defaultProps: Partial<IScrollRestoreProps & IStorableProps>;
    scrollTop: number;
    store: IStorableFunc;
    storable: boolean;
    private offview;
    private unmount;
    private lastScrollTop;
    getScrollableContainer(): any;
    componentWillMount(): void;
    componentDidMount(): void;
    componentWillUnmount(): void;
    scroll(): void;
}
export declare class ScrollToTop extends ScrollPosition<IScrollToTopProps, any> {
    static defaultProps: Partial<IScrollToTopProps>;
    scrollTop: number;
    getScrollableContainer(): any;
    scroll(): void;
}
