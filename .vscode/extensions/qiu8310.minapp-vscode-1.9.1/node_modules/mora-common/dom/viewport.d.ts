declare let viewport: {
    width: number;
    height: number;
    listen(element: Element, callback: (e: Event | IntersectionObserverEntry[] | {
        type: string;
    }) => void, options?: IViewportListenOptions): () => void;
    visiable(element: Element, options?: IViewportVisiableOptions): boolean;
    getViewport: () => {
        width: number;
        height: number;
    };
};
export { viewport };
export interface IViewportListenOptions {
    throttle?: number;
    debounce?: number;
    /** 包括监听 scroll 事件的 container, 和 el 元素的窗器，这两者一般是同一个 */
    container?: Element;
    offset?: IOffset;
    enableIntersectionObserver?: boolean;
}
export interface IViewportVisiableOptions {
    viewport?: IViewport;
    container?: Element;
    offset?: IOffset;
}
export interface IViewport {
    top: number;
    left: number;
    right: number;
    bottom: number;
}
export declare type IOffset = number | IViewport;
